import{_ as s,c as a,o as i,a1 as n}from"./chunks/framework.DvkhmZaR.js";const g=JSON.parse('{"title":"Astro","description":"","frontmatter":{},"headers":[],"relativePath":"code/basic/astro.md","filePath":"code/basic/astro.md"}'),l={name:"code/basic/astro.md"},e=n(`<h1 id="astro" tabindex="-1">Astro <a class="header-anchor" href="#astro" aria-label="Permalink to &quot;Astro&quot;">​</a></h1><h2 id="astro-是什么" tabindex="-1">Astro 是什么 <a class="header-anchor" href="#astro-是什么" aria-label="Permalink to &quot;Astro 是什么&quot;">​</a></h2><p>Astro是一个JavaScript web框架，针对构建快速、内容驱动的网站进行了优化。</p><h2 id="如何使用" tabindex="-1">如何使用 <a class="header-anchor" href="#如何使用" aria-label="Permalink to &quot;如何使用&quot;">​</a></h2><p><a href="https://astro.build/" target="_blank" rel="noreferrer">官网链接</a></p><p><a href="https://astro.build/themes/" target="_blank" rel="noreferrer">主题链接</a></p><p>可以直接去找心仪的主题，下载下来下载依赖跑就行</p><h2 id="cloudflare-pages-部署" tabindex="-1">Cloudflare Pages 部署 <a class="header-anchor" href="#cloudflare-pages-部署" aria-label="Permalink to &quot;Cloudflare Pages 部署&quot;">​</a></h2><p>个人推荐使用 <code>Cloudflare Pages</code>，过程简单，且不像 <code>Github Pages</code> 一样容易被墙，访问稳定 <a href="https://docs.astro.build/zh-cn/guides/deploy/cloudflare/" target="_blank" rel="noreferrer">部署教程</a></p><h2 id="github-pages-部署" tabindex="-1">Github Pages 部署 <a class="header-anchor" href="#github-pages-部署" aria-label="Permalink to &quot;Github Pages 部署&quot;">​</a></h2><p>如果你还是想要用 <code>Github Pages</code>，这是流程（官方的教程有点问题）</p><h3 id="设置-astro-config-mjs" tabindex="-1">设置 astro.config.mjs <a class="header-anchor" href="#设置-astro-config-mjs" aria-label="Permalink to &quot;设置 astro.config.mjs&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import { defineConfig } from &#39;astro/config&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>export default defineConfig({</span></span>
<span class="line"><span>  site: &#39;https://astronaut.github.io&#39;,</span></span>
<span class="line"><span>  base: &#39;my-repo&#39;,</span></span>
<span class="line"><span>})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// site 设置为 https://&lt;username&gt;.github.io</span></span>
<span class="line"><span>// base 一般为你版本库的名称，具体看 Github Pages 给你的路径</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 不需要配置 base 的情况：使用了自定义域名；或者仓库名为&lt;YOUR_USERNAME&gt;.github.io，此时部署的网站url无仓库名</span></span></code></pre></div><h3 id="新建-github-workflows" tabindex="-1">新建 Github workflows <a class="header-anchor" href="#新建-github-workflows" aria-label="Permalink to &quot;新建 Github workflows&quot;">​</a></h3><p>在项目中创建 <code>.github/workflows/</code> 目录，并创建一个新文件 <code>deploy.yml</code>，写入以下信息</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GitHub Pages Astro CI</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 每次推送到 \`main\` 分支时触发这个“工作流程”</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 如果你使用了别的分支名，请按需将 \`main\` 替换成你的分支名</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    branches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 允许你在 GitHub 上的 Actions 标签中手动触发此“工作流程”</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  workflow_dispatch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 允许 job 克隆 repo 并创建一个 page deployment</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">permissions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  contents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">read</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  pages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">write</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  id-token</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">write</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">jobs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    runs-on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ubuntu-latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Checkout your repository using git</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/checkout@v3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Install, build, and upload your site</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">withastro/action@v0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  deploy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    needs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">build</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    runs-on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ubuntu-latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">github-pages</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ steps.deployment.outputs.page_url }}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Deploy to GitHub Pages</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">deployment</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/deploy-pages@v1</span></span></code></pre></div><h3 id="配置-github-pages" tabindex="-1">配置 Github Pages <a class="header-anchor" href="#配置-github-pages" aria-label="Permalink to &quot;配置 Github Pages&quot;">​</a></h3><ul><li>在版本库中跳转到 <code>Settings</code> 选项中并找到 <code>Pages</code> 部分</li><li>选择 <code>Github Actions</code> 作为 <code>Source</code></li><li>提交上一步步骤写的 <code>workflow file</code>，推送到版本库</li></ul><p>此时现在网站就会自动完成发布，当你将新的变动推送到版本库时，<code>Github</code> 会自动进行部署</p>`,19),t=[e];function p(h,k,r,o,d,E){return i(),a("div",null,t)}const u=s(l,[["render",p]]);export{g as __pageData,u as default};
